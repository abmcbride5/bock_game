[{"/Users/Mick/blockgame/src/index.js":"1","/Users/Mick/blockgame/src/reportWebVitals.js":"2","/Users/Mick/blockgame/src/App.js":"3","/Users/Mick/blockgame/src/components/gird.js":"4","/Users/Mick/blockgame/src/components/square.js":"5","/Users/Mick/blockgame/src/puzzleFunctions/createPuzzle.js":"6","/Users/Mick/blockgame/src/puzzleVariables/colorArray.js":"7","/Users/Mick/blockgame/src/puzzleFunctions/removeIsland.js":"8","/Users/Mick/blockgame/src/puzzleFunctions/lifZeros.js":"9","/Users/Mick/blockgame/src/puzzleFunctions/replaceZeros.js":"10"},{"size":500,"mtime":1621788447309,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1621788447310,"results":"13","hashOfConfig":"12"},{"size":98,"mtime":1621791107643,"results":"14","hashOfConfig":"12"},{"size":2553,"mtime":1621877118980,"results":"15","hashOfConfig":"12"},{"size":378,"mtime":1621804617398,"results":"16","hashOfConfig":"12"},{"size":253,"mtime":1621836402948,"results":"17","hashOfConfig":"12"},{"size":144,"mtime":1621834292536,"results":"18","hashOfConfig":"12"},{"size":1150,"mtime":1621808774805,"results":"19","hashOfConfig":"12"},{"size":763,"mtime":1621876598586,"results":"20","hashOfConfig":"12"},{"size":529,"mtime":1621807698380,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"okownx",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/Mick/blockgame/src/index.js",[],["44","45"],"/Users/Mick/blockgame/src/reportWebVitals.js",[],"/Users/Mick/blockgame/src/App.js",[],"/Users/Mick/blockgame/src/components/gird.js",["46"],"import React, { useState } from 'react';\n\nimport Square from './square';\nimport colorArray from '../puzzleVariables/colorArray';\nimport createPuzzle from '../puzzleFunctions/createPuzzle';\n\nimport '../css/grid.css';\nimport removeIsland from '../puzzleFunctions/removeIsland';\nimport liftZeros from '../puzzleFunctions/lifZeros';\nimport replaceZeros from '../puzzleFunctions/replaceZeros';\n\n\n\n// function handleClick(grid, r, c, selected){\n//     removeIsland(grid, r, c, selected, [])\n\n// }\n\n\n\nexport default function Grid(){\n\n    let puzzle = createPuzzle();\n    const [gridPuzzle, setGridPuzzle] = useState(puzzle);\n    const [score, setScore] = useState(0);\n    const [moves, setMoves] = useState(25);\n    const [gameOver, setGameOver] = useState(false);\n  \n    const handleClick = (grid, r, c, selected, listOfCords) => { \n        let newGrid = [...grid];\n        let points = removeIsland(newGrid, r, c, selected, listOfCords)\n\n        if (moves === 1)\n            setGameOver(true);\n        if (score >= 2990)\n            setGameOver(true);\n\n        setMoves(moves - 1);\n\n       \n\n        if (points >= 3 && points < 5){\n            points = points * 2;\n        } else if (points === 5){\n            points = points * 3;\n        } else if (points > 5){\n            points = points * 10;\n        }\n\n        setScore(score + (5 * points));\n        liftZeros(newGrid);\n        replaceZeros(newGrid);\n        setGridPuzzle(newGrid);\n\n    }\n\n    const fillPuzzle = (puzzle) => {\n\n        let squareArray = [];\n        const lengthI = puzzle.length;\n        const lengthK = puzzle[0].length;\n\n        for (let i = 0; i < lengthI; i += 1){\n            for (let k = 0; k < lengthK; k += 1){\n                squareArray.push(<Square \n                    puzzle={puzzle}\n                    row={i}\n                    col={k}\n                    selection={puzzle[i][k]}\n                    clickResponse={handleClick}\n                    color={colorArray[puzzle[i][k]]} />)\n            }\n        }\n        return squareArray;\n    }\n\n    return (\n        <div className=\"grid\">\n            <div className=\"info\">\n                {score < 3000 && moves > 0 &&  <div>{score}</div> }\n                {score >= 3000 && <div> You Did it!!</div>}\n                {moves <= 0 && <div>Game Over. Better Luck Next time.</div>}\n                {score < 3000 && moves > 0 &&  <div>{moves}</div> }\n                \n                </div>\n            <div className=\"puzzle-container\">\n            {fillPuzzle(gridPuzzle)}\n            </div>\n        </div>    \n    )\n}","/Users/Mick/blockgame/src/components/square.js",[],"/Users/Mick/blockgame/src/puzzleFunctions/createPuzzle.js",[],"/Users/Mick/blockgame/src/puzzleVariables/colorArray.js",[],"/Users/Mick/blockgame/src/puzzleFunctions/removeIsland.js",[],"/Users/Mick/blockgame/src/puzzleFunctions/lifZeros.js",[],"/Users/Mick/blockgame/src/puzzleFunctions/replaceZeros.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":27,"column":12,"nodeType":"53","messageId":"54","endLine":27,"endColumn":20},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'gameOver' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]