{"ast":null,"code":"export default function removeIsland(grid, r, c, selected, listOfCords) {\n  // console.log(\"remove, gird, girdOf:\", grid, grid[r][c]);\n  if (r >= grid.length || c >= grid[0].length || r < 0 || c < 0) {\n    // console.log(\"first return cords\", listOfCords);\n    console.log(\"first return cords\", grid);\n    return;\n  } // console.log(\"r\", r)\n\n\n  if (grid[r][c] !== selected) {\n    console.log(\"second return cords\", grid);\n    return;\n  }\n\n  if (grid[r][c] === selected) {\n    if (!listOfCords.includes([[r, c]])) // console.log(\"does in include:\", listOfCords.includes([r, c]), r, c)\n      listOfCords.push([r, c]);\n    grid[r][c] = 0;\n    removeIsland(grid, r + 1, c, selected, listOfCords); // console.log(\"hello next run\", r, c, selected, listOfCords);\n\n    removeIsland(grid, r - 1, c, selected, listOfCords); // console.log(\"hello third run\", r, c, selected, listOfCords);\n\n    removeIsland(grid, r, c + 1, selected, listOfCords); // console.log(\"hello fourth run\", r, c, selected, listOfCords);\n\n    removeIsland(grid, r, c - 1, selected, listOfCords);\n  } else console.log(\"return cords\", grid);\n\n  return listOfCords.length;\n}","map":{"version":3,"sources":["/Users/Mick/blockgame/src/puzzleFunctions/removeIsland.js"],"names":["removeIsland","grid","r","c","selected","listOfCords","length","console","log","includes","push"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,CAA5B,EAA+BC,CAA/B,EAAkCC,QAAlC,EAA4CC,WAA5C,EAAwD;AACtE;AAEA,MAAIH,CAAC,IAAID,IAAI,CAACK,MAAV,IAAoBH,CAAC,IAAIF,IAAI,CAAC,CAAD,CAAJ,CAAQK,MAAjC,IAA2CJ,CAAC,GAAG,CAA/C,IAAoDC,CAAC,GAAG,CAA5D,EAA8D;AAC7D;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,IAAlC;AACA;AACA,GAPqE,CAQtE;;;AACA,MAAIA,IAAI,CAACC,CAAD,CAAJ,CAAQC,CAAR,MAAeC,QAAnB,EAA6B;AAC5BG,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCP,IAAnC;AACA;AACA;;AACD,MAAIA,IAAI,CAACC,CAAD,CAAJ,CAAQC,CAAR,MAAeC,QAAnB,EAA4B;AAC3B,QAAI,CAACC,WAAW,CAACI,QAAZ,CAAqB,CAAC,CAACP,CAAD,EAAIC,CAAJ,CAAD,CAArB,CAAL,EACC;AACAE,MAAAA,WAAW,CAACK,IAAZ,CAAiB,CAACR,CAAD,EAAIC,CAAJ,CAAjB;AACAF,IAAAA,IAAI,CAACC,CAAD,CAAJ,CAAQC,CAAR,IAAa,CAAb;AACAH,IAAAA,YAAY,CAACC,IAAD,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAd,EAAiBC,QAAjB,EAA2BC,WAA3B,CAAZ,CAL0B,CAM3B;;AACCL,IAAAA,YAAY,CAACC,IAAD,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAd,EAAiBC,QAAjB,EAA2BC,WAA3B,CAAZ,CAP0B,CAQ3B;;AACCL,IAAAA,YAAY,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAC,GAAG,CAAd,EAAiBC,QAAjB,EAA2BC,WAA3B,CAAZ,CAT0B,CAU3B;;AACCL,IAAAA,YAAY,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAC,GAAG,CAAd,EAAiBC,QAAjB,EAA2BC,WAA3B,CAAZ;AACD,GAZD,MAaCE,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BP,IAA5B;;AACA,SAAOI,WAAW,CAACC,MAAnB;AAED","sourcesContent":["export default function removeIsland(grid, r, c, selected, listOfCords){\n\t// console.log(\"remove, gird, girdOf:\", grid, grid[r][c]);\n\t\n\tif (r >= grid.length || c >= grid[0].length || r < 0 || c < 0){\n\t\t// console.log(\"first return cords\", listOfCords);\n\t\tconsole.log(\"first return cords\", grid);\n\t\treturn ;\n\t}\n\t// console.log(\"r\", r)\n\tif (grid[r][c] !== selected) {\n\t\tconsole.log(\"second return cords\", grid);\n\t\treturn \n\t}\n\tif (grid[r][c] === selected){\n\t\tif (!listOfCords.includes([[r, c]]))\n\t\t\t// console.log(\"does in include:\", listOfCords.includes([r, c]), r, c)\n\t\t\tlistOfCords.push([r, c]);\n\t\t\tgrid[r][c] = 0;\n\t\t removeIsland(grid, r + 1, c, selected, listOfCords);\n\t\t// console.log(\"hello next run\", r, c, selected, listOfCords);\n\t\t removeIsland(grid, r - 1, c, selected, listOfCords);\n\t\t// console.log(\"hello third run\", r, c, selected, listOfCords);\n\t\t removeIsland(grid, r, c + 1, selected, listOfCords)\n\t\t// console.log(\"hello fourth run\", r, c, selected, listOfCords);\n\t\t removeIsland(grid, r, c - 1, selected, listOfCords)\n\t} else \n\t\tconsole.log(\"return cords\", grid);\n\t\treturn listOfCords.length;\n\t\n}"]},"metadata":{},"sourceType":"module"}